{
  "C:\\Users\\Rafae\\OneDrive\\Desktop\\Sprints\\Sprint-8\\sprint-8-pb-aws-abril\\visao-computacional": {
    "versionSfCore": null,
    "versionFramework": "4.1.19",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "aws": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "vision",
            "frameworkVersion": "4.1.16",
            "provider": {
              "name": "aws",
              "runtime": "python3.9",
              "region": "us-east-1",
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "rekognition:DetectFaces",
                    "rekognition:DetectLabels",
                    "logs:*",
                    "s3:GetObject",
                    "bedrock:InvokeModel"
                  ],
                  "Resource": "*"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HealthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/vision-dev-health"
                    }
                  },
                  "V1DescriptionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/vision-dev-v1Description"
                    }
                  },
                  "V2DescriptionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/vision-dev-v2Description"
                    }
                  },
                  "AnalyzeUnderscoreimageUnderscorev1LogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/vision-dev-analyze_image_v1"
                    }
                  },
                  "AnalyzeUnderscoreimageUnderscorev2LogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/vision-dev-analyze_image_v2"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "vision",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vision-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vision-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "rekognition:DetectFaces",
                                  "rekognition:DetectLabels",
                                  "logs:*",
                                  "s3:GetObject",
                                  "bedrock:InvokeModel"
                                ],
                                "Resource": "*"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "vision",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "HealthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                      },
                      "Handler": "handlers/health.health",
                      "Runtime": "python3.9",
                      "FunctionName": "vision-dev-health",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "HealthLogGroup"
                    ]
                  },
                  "V1DescriptionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                      },
                      "Handler": "handlers/descriptions.v1_description",
                      "Runtime": "python3.9",
                      "FunctionName": "vision-dev-v1Description",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "V1DescriptionLogGroup"
                    ]
                  },
                  "V2DescriptionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                      },
                      "Handler": "handlers/descriptions.v2_description",
                      "Runtime": "python3.9",
                      "FunctionName": "vision-dev-v2Description",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "V2DescriptionLogGroup"
                    ]
                  },
                  "AnalyzeUnderscoreimageUnderscorev1LambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                      },
                      "Handler": "handlers/analyzeV1.analyze_image_v1",
                      "Runtime": "python3.9",
                      "FunctionName": "vision-dev-analyze_image_v1",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzeUnderscoreimageUnderscorev1LogGroup"
                    ]
                  },
                  "AnalyzeUnderscoreimageUnderscorev2LambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                      },
                      "Handler": "handlers/analyzeV2.analyze_image_v2",
                      "Runtime": "python3.9",
                      "FunctionName": "vision-dev-analyze_image_v2",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzeUnderscoreimageUnderscorev2LogGroup"
                    ]
                  },
                  "HealthLambdaVersionEWyXZA62b6IloUpwMxZo6upSDyI7tYzvT5fb9tMZ0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "HealthLambdaFunction"
                      },
                      "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
                    }
                  },
                  "V1DescriptionLambdaVersionTCnH3CnO9kQ4BtkPvfEcBuA7qpd4ZNdztuM3EqUZarw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "V1DescriptionLambdaFunction"
                      },
                      "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
                    }
                  },
                  "V2DescriptionLambdaVersionWkDLg2VOMm6RdmVeRmLx8snn6VuEQMjcp97xk5xBw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "V2DescriptionLambdaFunction"
                      },
                      "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
                    }
                  },
                  "AnalyzeUnderscoreimageUnderscorev1LambdaVersionrRsRlfd4as9Ybb4w6wAK3Nw0M3Wukza1lDiGGFNoeI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AnalyzeUnderscoreimageUnderscorev1LambdaFunction"
                      },
                      "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
                    }
                  },
                  "AnalyzeUnderscoreimageUnderscorev2LambdaVersionSXxMpmpZcTFK9quno4b634RQlr2lxO9BLuFopl8ag": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AnalyzeUnderscoreimageUnderscorev2LambdaFunction"
                      },
                      "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-vision",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "HealthLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationHealth": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGet": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationHealth"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationHealth"
                  },
                  "V1DescriptionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationV1Description": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetV1": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /v1",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationV1Description"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationV1Description"
                  },
                  "V2DescriptionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "V2DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationV2Description": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "V2DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetV2": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /v2",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationV2Description"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationV2Description"
                  },
                  "AnalyzeUnderscoreimageUnderscorev1LambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AnalyzeUnderscoreimageUnderscorev1LambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev1": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "AnalyzeUnderscoreimageUnderscorev1LambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostV1Vision": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /v1/vision",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev1"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev1"
                  },
                  "AnalyzeUnderscoreimageUnderscorev2LambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AnalyzeUnderscoreimageUnderscorev2LambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev2": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "AnalyzeUnderscoreimageUnderscorev2LambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostV2Vision": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /v2/vision",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev2"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev2"
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "HealthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "HealthLambdaVersionEWyXZA62b6IloUpwMxZo6upSDyI7tYzvT5fb9tMZ0"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-HealthLambdaFunctionQualifiedArn"
                    }
                  },
                  "V1DescriptionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "V1DescriptionLambdaVersionTCnH3CnO9kQ4BtkPvfEcBuA7qpd4ZNdztuM3EqUZarw"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-V1DescriptionLambdaFunctionQualifiedArn"
                    }
                  },
                  "V2DescriptionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "V2DescriptionLambdaVersionWkDLg2VOMm6RdmVeRmLx8snn6VuEQMjcp97xk5xBw"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-V2DescriptionLambdaFunctionQualifiedArn"
                    }
                  },
                  "AnalyzeUnderscoreimageUnderscorev1LambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AnalyzeUnderscoreimageUnderscorev1LambdaVersionrRsRlfd4as9Ybb4w6wAK3Nw0M3Wukza1lDiGGFNoeI"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-AnalyzeUnderscoreimageUnderscorev1LambdaFunctionQualifiedArn"
                    }
                  },
                  "AnalyzeUnderscoreimageUnderscorev2LambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AnalyzeUnderscoreimageUnderscorev2LambdaVersionSXxMpmpZcTFK9quno4b634RQlr2lxO9BLuFopl8ag"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-AnalyzeUnderscoreimageUnderscorev2LambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-vision-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-vision-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "health": {
                "handler": "handlers/health.health",
                "events": [
                  {
                    "httpApi": {
                      "path": "/",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/"
                  }
                ],
                "name": "vision-dev-health",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "HealthLambdaVersionEWyXZA62b6IloUpwMxZo6upSDyI7tYzvT5fb9tMZ0"
              },
              "v1Description": {
                "handler": "handlers/descriptions.v1_description",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/v1"
                  }
                ],
                "name": "vision-dev-v1Description",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "V1DescriptionLambdaVersionTCnH3CnO9kQ4BtkPvfEcBuA7qpd4ZNdztuM3EqUZarw"
              },
              "v2Description": {
                "handler": "handlers/descriptions.v2_description",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v2",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/v2"
                  }
                ],
                "name": "vision-dev-v2Description",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "V2DescriptionLambdaVersionWkDLg2VOMm6RdmVeRmLx8snn6VuEQMjcp97xk5xBw"
              },
              "analyze_image_v1": {
                "handler": "handlers/analyzeV1.analyze_image_v1",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1/vision",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/v1/vision"
                  }
                ],
                "name": "vision-dev-analyze_image_v1",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "AnalyzeUnderscoreimageUnderscorev1LambdaVersionrRsRlfd4as9Ybb4w6wAK3Nw0M3Wukza1lDiGGFNoeI"
              },
              "analyze_image_v2": {
                "handler": "handlers/analyzeV2.analyze_image_v2",
                "timeout": 30,
                "events": [
                  {
                    "httpApi": {
                      "path": "/v2/vision",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/v2/vision"
                  }
                ],
                "name": "vision-dev-analyze_image_v2",
                "package": {},
                "memory": 1024,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "AnalyzeUnderscoreimageUnderscorev2LambdaVersionSXxMpmpZcTFK9quno4b634RQlr2lxO9BLuFopl8ag"
              }
            }
          },
          "configFileDirPath": "C:\\Users\\Rafae\\OneDrive\\Desktop\\Sprints\\Sprint-8\\sprint-8-pb-aws-abril\\visao-computacional",
          "config": {
            "type": "aws"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "isDefaultConfig": true
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Rafae\\OneDrive\\Desktop\\Sprints\\Sprint-8\\sprint-8-pb-aws-abril\\visao-computacional",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "vision",
      "frameworkVersion": "4.1.16",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-1",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "rekognition:DetectFaces",
              "rekognition:DetectLabels",
              "logs:*",
              "s3:GetObject",
              "bedrock:InvokeModel"
            ],
            "Resource": "*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HealthLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/vision-dev-health"
              }
            },
            "V1DescriptionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/vision-dev-v1Description"
              }
            },
            "V2DescriptionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/vision-dev-v2Description"
              }
            },
            "AnalyzeUnderscoreimageUnderscorev1LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/vision-dev-analyze_image_v1"
              }
            },
            "AnalyzeUnderscoreimageUnderscorev2LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/vision-dev-analyze_image_v2"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "vision",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vision-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vision-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "rekognition:DetectFaces",
                            "rekognition:DetectLabels",
                            "logs:*",
                            "s3:GetObject",
                            "bedrock:InvokeModel"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "vision",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HealthLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                },
                "Handler": "handlers/health.health",
                "Runtime": "python3.9",
                "FunctionName": "vision-dev-health",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HealthLogGroup"
              ]
            },
            "V1DescriptionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                },
                "Handler": "handlers/descriptions.v1_description",
                "Runtime": "python3.9",
                "FunctionName": "vision-dev-v1Description",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "V1DescriptionLogGroup"
              ]
            },
            "V2DescriptionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                },
                "Handler": "handlers/descriptions.v2_description",
                "Runtime": "python3.9",
                "FunctionName": "vision-dev-v2Description",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "V2DescriptionLogGroup"
              ]
            },
            "AnalyzeUnderscoreimageUnderscorev1LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                },
                "Handler": "handlers/analyzeV1.analyze_image_v1",
                "Runtime": "python3.9",
                "FunctionName": "vision-dev-analyze_image_v1",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AnalyzeUnderscoreimageUnderscorev1LogGroup"
              ]
            },
            "AnalyzeUnderscoreimageUnderscorev2LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/vision/dev/1723144948834-2024-08-08T19:22:28.834Z/vision.zip"
                },
                "Handler": "handlers/analyzeV2.analyze_image_v2",
                "Runtime": "python3.9",
                "FunctionName": "vision-dev-analyze_image_v2",
                "MemorySize": 1024,
                "Timeout": 30,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AnalyzeUnderscoreimageUnderscorev2LogGroup"
              ]
            },
            "HealthLambdaVersionEWyXZA62b6IloUpwMxZo6upSDyI7tYzvT5fb9tMZ0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HealthLambdaFunction"
                },
                "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
              }
            },
            "V1DescriptionLambdaVersionTCnH3CnO9kQ4BtkPvfEcBuA7qpd4ZNdztuM3EqUZarw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "V1DescriptionLambdaFunction"
                },
                "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
              }
            },
            "V2DescriptionLambdaVersionWkDLg2VOMm6RdmVeRmLx8snn6VuEQMjcp97xk5xBw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "V2DescriptionLambdaFunction"
                },
                "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
              }
            },
            "AnalyzeUnderscoreimageUnderscorev1LambdaVersionrRsRlfd4as9Ybb4w6wAK3Nw0M3Wukza1lDiGGFNoeI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AnalyzeUnderscoreimageUnderscorev1LambdaFunction"
                },
                "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
              }
            },
            "AnalyzeUnderscoreimageUnderscorev2LambdaVersionSXxMpmpZcTFK9quno4b634RQlr2lxO9BLuFopl8ag": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AnalyzeUnderscoreimageUnderscorev2LambdaFunction"
                },
                "CodeSha256": "tAXZwo/VuPhTXkQ3I7tE4Z/hJogrKHDNA9pg2tOyaXs="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-vision",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "HealthLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationHealth": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGet": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationHealth"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationHealth"
            },
            "V1DescriptionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "V1DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationV1Description": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "V1DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetV1": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /v1",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationV1Description"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationV1Description"
            },
            "V2DescriptionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "V2DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationV2Description": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "V2DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetV2": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /v2",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationV2Description"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationV2Description"
            },
            "AnalyzeUnderscoreimageUnderscorev1LambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AnalyzeUnderscoreimageUnderscorev1LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev1": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AnalyzeUnderscoreimageUnderscorev1LambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostV1Vision": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /v1/vision",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev1"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev1"
            },
            "AnalyzeUnderscoreimageUnderscorev2LambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AnalyzeUnderscoreimageUnderscorev2LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev2": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AnalyzeUnderscoreimageUnderscorev2LambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostV2Vision": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /v2/vision",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev2"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationAnalyzeUnderscoreimageUnderscorev2"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-vision-dev-ServerlessDeploymentBucketName"
              }
            },
            "HealthLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HealthLambdaVersionEWyXZA62b6IloUpwMxZo6upSDyI7tYzvT5fb9tMZ0"
              },
              "Export": {
                "Name": "sls-vision-dev-HealthLambdaFunctionQualifiedArn"
              }
            },
            "V1DescriptionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "V1DescriptionLambdaVersionTCnH3CnO9kQ4BtkPvfEcBuA7qpd4ZNdztuM3EqUZarw"
              },
              "Export": {
                "Name": "sls-vision-dev-V1DescriptionLambdaFunctionQualifiedArn"
              }
            },
            "V2DescriptionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "V2DescriptionLambdaVersionWkDLg2VOMm6RdmVeRmLx8snn6VuEQMjcp97xk5xBw"
              },
              "Export": {
                "Name": "sls-vision-dev-V2DescriptionLambdaFunctionQualifiedArn"
              }
            },
            "AnalyzeUnderscoreimageUnderscorev1LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AnalyzeUnderscoreimageUnderscorev1LambdaVersionrRsRlfd4as9Ybb4w6wAK3Nw0M3Wukza1lDiGGFNoeI"
              },
              "Export": {
                "Name": "sls-vision-dev-AnalyzeUnderscoreimageUnderscorev1LambdaFunctionQualifiedArn"
              }
            },
            "AnalyzeUnderscoreimageUnderscorev2LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AnalyzeUnderscoreimageUnderscorev2LambdaVersionSXxMpmpZcTFK9quno4b634RQlr2lxO9BLuFopl8ag"
              },
              "Export": {
                "Name": "sls-vision-dev-AnalyzeUnderscoreimageUnderscorev2LambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-vision-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-vision-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "health": {
          "handler": "handlers/health.health",
          "events": [
            {
              "httpApi": {
                "path": "/",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/"
            }
          ],
          "name": "vision-dev-health",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "HealthLambdaVersionEWyXZA62b6IloUpwMxZo6upSDyI7tYzvT5fb9tMZ0"
        },
        "v1Description": {
          "handler": "handlers/descriptions.v1_description",
          "events": [
            {
              "httpApi": {
                "path": "/v1",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/v1"
            }
          ],
          "name": "vision-dev-v1Description",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "V1DescriptionLambdaVersionTCnH3CnO9kQ4BtkPvfEcBuA7qpd4ZNdztuM3EqUZarw"
        },
        "v2Description": {
          "handler": "handlers/descriptions.v2_description",
          "events": [
            {
              "httpApi": {
                "path": "/v2",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/v2"
            }
          ],
          "name": "vision-dev-v2Description",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "V2DescriptionLambdaVersionWkDLg2VOMm6RdmVeRmLx8snn6VuEQMjcp97xk5xBw"
        },
        "analyze_image_v1": {
          "handler": "handlers/analyzeV1.analyze_image_v1",
          "events": [
            {
              "httpApi": {
                "path": "/v1/vision",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/v1/vision"
            }
          ],
          "name": "vision-dev-analyze_image_v1",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "AnalyzeUnderscoreimageUnderscorev1LambdaVersionrRsRlfd4as9Ybb4w6wAK3Nw0M3Wukza1lDiGGFNoeI"
        },
        "analyze_image_v2": {
          "handler": "handlers/analyzeV2.analyze_image_v2",
          "timeout": 30,
          "events": [
            {
              "httpApi": {
                "path": "/v2/vision",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/v2/vision"
            }
          ],
          "name": "vision-dev-analyze_image_v2",
          "package": {},
          "memory": 1024,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "AnalyzeUnderscoreimageUnderscorev2LambdaVersionSXxMpmpZcTFK9quno4b634RQlr2lxO9BLuFopl8ag"
        }
      }
    },
    "serviceRawFile": "service: vision\r\nframeworkVersion: '4.1.16'\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.9\r\n  region: us-east-1\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"rekognition:DetectFaces\"\r\n        - \"rekognition:DetectLabels\"\r\n        - \"logs:*\"\r\n        - \"s3:GetObject\"\r\n        - \"bedrock:InvokeModel\"  \r\n      Resource: \"*\"\r\n\r\nfunctions:\r\n  health:\r\n    handler: handlers/health.health\r\n    events:\r\n      - httpApi:\r\n          path: /\r\n          method: get\r\n  v1Description:\r\n    handler: handlers/descriptions.v1_description\r\n    events:\r\n      - httpApi:\r\n          path: /v1\r\n          method: get\r\n  v2Description:\r\n    handler: handlers/descriptions.v2_description\r\n    events:\r\n      - httpApi:\r\n          path: /v2\r\n          method: get\r\n  analyze_image_v1:\r\n    handler: handlers/analyzeV1.analyze_image_v1\r\n    events:\r\n      - httpApi:\r\n          path: /v1/vision\r\n          method: post\r\n  analyze_image_v2:\r\n    handler: handlers/analyzeV2.analyze_image_v2\r\n    timeout: 30\r\n    events:\r\n      - httpApi:\r\n          path: /v2/vision\r\n          method: post\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "The security token included in the request is invalid",
      "stack": "InvalidClientTokenId: The security token included in the request is invalid\n    at throwDefaultError (file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:88:7944)\n    at file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:88:8218\n    at de_CommandError (file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:113:39580)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:77:24670\n    at async file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:78:11491\n    at async file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:88:26572\n    at async file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:76:20261\n    at async resolveAccountId (file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:117:909861)\n    at async getAwsCredentialIdentityProvider (file:///C:/Users/Rafae/.serverless/releases/4.1.19/package/dist/sf-core.js:179:455864)"
    },
    "params": {},
    "machineId": "20c5836afbbc53b0ad89c13b8b9192ea",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "c3a15f3f-c3c8-4ce8-820c-8c2826a65f21",
    "orgName": "rafarez",
    "userId": "S3Y9FSPhJDQlWv8knM",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "rafarez",
    "subscription": null,
    "userEmail": "rafaelrez2004@gmail.com",
    "versionSf": "4.1.19",
    "serviceProviderAwsCfStackName": "vision-dev",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}